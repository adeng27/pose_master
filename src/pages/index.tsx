import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import { Poses } from "~/components/poses";

//Check if arms are horizontal at shoulder level
// const tArms = (pts: number[]) => {
//   if (!(pts[0] && pts[1] && pts[2] && pts[3] && pts[4] && pts[5])) throw new Error("Invalid inputs");
//   //check shoulders
//   if (Math.abs(pts[0] - pts[1]) <= error) {
//     //check elbows to shoulders
//     if (Math.abs(pts[0] - pts[2]) <= error && Math.abs(pts[1] - pts[3]) <= error) {
//       //check wrists to shoulders
//       if (Math.abs(pts[0] - pts[4]) <= error && Math.abs(pts[1] - pts[5]) <= error) return true
//     }
//   }
//   return false;
// }


export default function Home() {
  const videoRef = useRef<HTMLVideoElement>(null);
  const photoRef = useRef<HTMLCanvasElement>(null);
  const stripRef = useRef<HTMLDivElement>(null);

  const [imageUrl, setImageUrl] = useState("");

  useEffect(() => {
    getVideo();
  }, [videoRef]);

  const getVideo = () => {
    navigator.mediaDevices
      .getUserMedia({ video: { width: 378, height: 504} })
      .then(stream => {
        const video = videoRef.current!;
        video.srcObject = stream;
        video.play();
      })
      .catch(err => {
        console.error("error:", err);
      });
  };

  const paintToCanvas = () => {
    let video = videoRef.current!;
    let photo = photoRef.current!;
    let ctx = photo.getContext('2d')!;

    const width = 378;
    const height = 504;
    photo.width = width;
    photo.height = height;

    return setInterval(() => {
      ctx.drawImage(video, 0, 0, width, height);
    }, 200);
  };

  const takePhoto = () => {
    let photo = photoRef.current!;
    let strip = stripRef.current!;

    console.warn(strip);

    const data = photo.toDataURL('image/jpeg');
    setImageUrl(data);

    console.warn(data);
    const link = document.createElement('a');
    link.href = data;
    link.setAttribute('download', 'myWebcam');
    link.innerHTML = `<img src='${data}' alt='thumbnail'/>`;
    strip.insertBefore(link, strip.firstChild);
  };

  return (
    <>
      <Head>
        <title>Pose Master</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          {imageUrl !== "" && <Poses imageUrl={imageUrl} />}
          <div className="flex flex-col gap-8">
            <button onClick={() => takePhoto()}>Take a photo</button>
            <video onCanPlay={() => paintToCanvas()} ref={videoRef} />
            <canvas ref={photoRef} className="hidden" />
            <div>
              <div ref={stripRef} />
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
